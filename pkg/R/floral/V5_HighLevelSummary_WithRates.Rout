
R version 2.14.0 (2011-10-31)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> source("V5_UtilityFns.R")
Loading required package: deSolve
Loading required package: ape
Loading required package: subplex
Loading required package: polynom

Attaching package: ‘gmp’

The following object(s) are masked from ‘package:sfsmisc’:

    factorize

The following object(s) are masked from ‘package:base’:

    %*%, apply, crossprod, matrix, tcrossprod

Warning message:
package ‘gmp’ was built under R version 2.14.1 
> setwd("../Summaries")
> ls()
 [1] "bestValues"                                      
 [2] "bFbyModel"                                       
 [3] "birthRate"                                       
 [4] "bNbyModel"                                       
 [5] "colnamesVector"                                  
 [6] "colToExamine"                                    
 [7] "comboAsBinaryString"                             
 [8] "comboAsBinaryVector"                             
 [9] "comboAsDecimal"                                  
[10] "comboCounts"                                     
[11] "comboDecimal"                                    
[12] "comboName"                                       
[13] "comboProportions"                                
[14] "convertFocalLabelToFocalVector"                  
[15] "convertFocalToCombos"                            
[16] "createComboMatrix"                               
[17] "currentVector"                                   
[18] "data"                                            
[19] "deathRate"                                       
[20] "dFbyModel"                                       
[21] "dirRoot"                                         
[22] "diversificationModelIndex"                       
[23] "diversificationModels"                           
[24] "diversificationRate"                             
[25] "dNbyModel"                                       
[26] "doRsync"                                         
[27] "dVector"                                         
[28] "extralistD"                                      
[29] "extralistT"                                      
[30] "file"                                            
[31] "finalMatrixAllCount"                             
[32] "find.mle.method"                                 
[33] "focalAsBinaryString"                             
[34] "focalAsBinaryVector"                             
[35] "focalAsDecimal"                                  
[36] "focalIndex"                                      
[37] "focalVector"                                     
[38] "focalVectorList"                                 
[39] "getAllInterestingFocalVectorsInefficient"        
[40] "getAllInterestingFocalVectorsStringsEfficient"   
[41] "getAllInterestingFocalVectorsStringsEfficientOLD"
[42] "getFocalSummaryLabel"                            
[43] "highlevel.dataframe"                             
[44] "i"                                               
[45] "interestingFocal"                                
[46] "labels"                                          
[47] "loopCount"                                       
[48] "loopMax"                                         
[49] "lsString"                                        
[50] "maxFocalAsBinaryVector"                          
[51] "mkdirCmd"                                        
[52] "nameRoot"                                        
[53] "names"                                           
[54] "nchar"                                           
[55] "ndf2"                                            
[56] "ndf3"                                            
[57] "numberFocalCombos"                               
[58] "origWD"                                          
[59] "partitionSize"                                   
[60] "pbsCommands"                                     
[61] "phy"                                             
[62] "position"                                        
[63] "qDataFrame"                                      
[64] "qFFbyModel"                                      
[65] "qFNbyModel"                                      
[66] "qNFbyModel"                                      
[67] "qNNbyModel"                                      
[68] "queue"                                           
[69] "qValuesPositions"                                
[70] "rate"                                            
[71] "runCommand"                                      
[72] "runsInFile"                                      
[73] "S"                                               
[74] "sourcetraits"                                    
[75] "stringToVector"                                  
[76] "subdata"                                         
[77] "summarizeIndiv"                                  
[78] "summarizeModelWeights"                           
[79] "toBinLarge"                                      
[80] "totalRuns"                                       
[81] "transitionModelIndex"                            
[82] "transitionModels"                                
[83] "tree"                                            
[84] "turnoverRate"                                    
[85] "tVector"                                         
[86] "vectorMismatch"                                  
[87] "vectorMismatchExcludePositions"                  
[88] "vectorToString"                                  
> highlevel.dataframe<-data.frame()
> for (T in 1:5) {
+ 	for (D in 1:6) {
+ 		if(system(paste("ls -1 'RateSummaryT",T,"D",D,".Rsave' | grep -c save"),intern=TRUE)>0) {
+ 			load(paste("RateSummaryT",T,"D",D,".Rsave"))
+ 			if (T+D==2) { #first one
+ 				highlevel.dataframe<-summary.dataframe[,1:(dim(summary.dataframe)[2])]
+ 			}
+ 			else {
+ 				highlevel.dataframe<-rbind(highlevel.dataframe,summary.dataframe[,1:(dim(summary.dataframe)[2])])
+ 			}
+ 			save(highlevel.dataframe,file="/Users/bomeara/Sites/RunsNov2011/Summaries/Highlevel.dataframe.withrates.Rsave",compress=TRUE)
+ 			print(paste("just did  T",T,"D",D,"with length =",dim(highlevel.dataframe)[1]))
+ 		}
+ 	}
+ }
[1] "just did  T 1 D 1 with length = 729"
[1] "just did  T 1 D 2 with length = 1458"
[1] "just did  T 1 D 3 with length = 2187"
[1] "just did  T 1 D 4 with length = 2916"
[1] "just did  T 1 D 5 with length = 3645"
[1] "just did  T 1 D 6 with length = 4374"
[1] "just did  T 2 D 1 with length = 5103"
[1] "just did  T 2 D 2 with length = 5832"
[1] "just did  T 2 D 3 with length = 6561"
[1] "just did  T 2 D 4 with length = 7290"
[1] "just did  T 2 D 5 with length = 8019"
[1] "just did  T 2 D 6 with length = 8748"
[1] "just did  T 3 D 1 with length = 9477"
[1] "just did  T 3 D 2 with length = 10206"
[1] "just did  T 3 D 3 with length = 10935"
[1] "just did  T 3 D 4 with length = 11664"
[1] "just did  T 3 D 5 with length = 12393"
[1] "just did  T 3 D 6 with length = 13122"
[1] "just did  T 4 D 1 with length = 13851"
[1] "just did  T 4 D 2 with length = 14580"
[1] "just did  T 4 D 3 with length = 15309"
[1] "just did  T 4 D 4 with length = 16038"
[1] "just did  T 4 D 5 with length = 16767"
[1] "just did  T 4 D 6 with length = 17496"
[1] "just did  T 5 D 1 with length = 18101"
[1] "just did  T 5 D 2 with length = 18706"
[1] "just did  T 5 D 3 with length = 19311"
[1] "just did  T 5 D 4 with length = 19916"
[1] "just did  T 5 D 5 with length = 20521"
[1] "just did  T 5 D 6 with length = 21126"
> 
> ls()
 [1] "bestValues"                                      
 [2] "bFbyModel"                                       
 [3] "birthRate"                                       
 [4] "bNbyModel"                                       
 [5] "colnamesVector"                                  
 [6] "colToExamine"                                    
 [7] "comboAsBinaryString"                             
 [8] "comboAsBinaryVector"                             
 [9] "comboAsDecimal"                                  
[10] "comboCounts"                                     
[11] "comboDecimal"                                    
[12] "comboName"                                       
[13] "comboProportions"                                
[14] "convertFocalLabelToFocalVector"                  
[15] "convertFocalToCombos"                            
[16] "createComboMatrix"                               
[17] "currentVector"                                   
[18] "D"                                               
[19] "data"                                            
[20] "deathRate"                                       
[21] "dFbyModel"                                       
[22] "dirRoot"                                         
[23] "diversificationModelIndex"                       
[24] "diversificationModels"                           
[25] "diversificationRate"                             
[26] "dNbyModel"                                       
[27] "doRsync"                                         
[28] "dVector"                                         
[29] "extralistD"                                      
[30] "extralistT"                                      
[31] "file"                                            
[32] "finalMatrixAllCount"                             
[33] "find.mle.method"                                 
[34] "focalAsBinaryString"                             
[35] "focalAsBinaryVector"                             
[36] "focalAsDecimal"                                  
[37] "focalIndex"                                      
[38] "focalVector"                                     
[39] "focalVectorList"                                 
[40] "getAllInterestingFocalVectorsInefficient"        
[41] "getAllInterestingFocalVectorsStringsEfficient"   
[42] "getAllInterestingFocalVectorsStringsEfficientOLD"
[43] "getFocalSummaryLabel"                            
[44] "highlevel.dataframe"                             
[45] "i"                                               
[46] "interestingFocal"                                
[47] "labels"                                          
[48] "loopCount"                                       
[49] "loopMax"                                         
[50] "lsString"                                        
[51] "maxFocalAsBinaryVector"                          
[52] "mkdirCmd"                                        
[53] "nameRoot"                                        
[54] "names"                                           
[55] "nchar"                                           
[56] "ndf2"                                            
[57] "ndf3"                                            
[58] "numberFocalCombos"                               
[59] "origWD"                                          
[60] "partitionSize"                                   
[61] "pbsCommands"                                     
[62] "phy"                                             
[63] "position"                                        
[64] "qDataFrame"                                      
[65] "qFFbyModel"                                      
[66] "qFNbyModel"                                      
[67] "qNFbyModel"                                      
[68] "qNNbyModel"                                      
[69] "queue"                                           
[70] "qValuesPositions"                                
[71] "rate"                                            
[72] "runCommand"                                      
[73] "runsInFile"                                      
[74] "S"                                               
[75] "sourcetraits"                                    
[76] "stringToVector"                                  
[77] "subdata"                                         
[78] "summarizeIndiv"                                  
[79] "summarizeModelWeights"                           
[80] "summary.dataframe"                               
[81] "T"                                               
[82] "toBinLarge"                                      
[83] "totalRuns"                                       
[84] "transitionModelIndex"                            
[85] "transitionModels"                                
[86] "tree"                                            
[87] "turnoverRate"                                    
[88] "tVector"                                         
[89] "vectorMismatch"                                  
[90] "vectorMismatchExcludePositions"                  
[91] "vectorToString"                                  
> deltaAIC<-highlevel.dataframe$AIC-min(highlevel.dataframe$AIC)
> relativeLikelihood<-exp(-0.5 * deltaAIC)
> AICweight<-relativeLikelihood/sum(relativeLikelihood)
> highlevel.dataframe<-cbind(deltaAIC,AICweight,highlevel.dataframe)
> save(highlevel.dataframe,file="/Users/bomeara/Sites/RunsNov2011/Summaries/Highlevel.dataframe.withrates.Rsave",compress=TRUE)
> summarizeModelWeights(summary.dataframe=highlevel.dataframe,S=S,transitionModels=transitionModels, diversificationModels=diversificationModels)
                       yule tworateyule birthdeath twobirthonedeath
equal                     0           0          0                0
inflow                    0           0          0                0
outflow                   0           0          0                0
inandoutflow              0           0          0                0
free                      0           0          0                0
diversification totals    0           0          0                0
                       onebirthtwodeath free transition totals
equal                                 0    0                 0
inflow                                0    1                 1
outflow                               0    0                 0
inandoutflow                          0    0                 0
free                                  0    0                 0
diversification totals                0    1                 1
                                yule   tworateyule   birthdeath
equal                  1.493534e-208 6.907708e-123 6.136126e-17
inflow                 1.814654e-197 1.565767e-112 2.738832e-06
outflow                7.149518e-198 1.565767e-112 1.079294e-06
inandoutflow           9.248252e-199 1.581008e-104 5.132325e-08
free                   2.499067e-200 4.561396e-107 5.071012e-10
diversification totals 2.624588e-197 1.585570e-104 3.869956e-06
                       twobirthonedeath onebirthtwodeath         free
equal                      6.028941e-10     4.785584e-10 7.608529e-04
inflow                     1.405611e-03     1.015398e-03 9.954373e-01
outflow                    2.292639e-08     2.295990e-08 9.225054e-04
inandoutflow               6.240884e-06     5.039521e-06 4.430536e-04
free                       5.958002e-10     5.038446e-10 6.385166e-08
diversification totals     1.411876e-03     1.020461e-03 9.975638e-01
                       transition totals
equal                       7.608540e-04
inflow                      9.978611e-01
outflow                     9.236306e-04
inandoutflow                4.543853e-04
free                        6.545841e-08
diversification totals      1.000000e+00
> 
> proc.time()
   user  system elapsed 
527.763  94.886 637.197 
